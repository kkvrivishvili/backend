FROM python:3.10-slim

WORKDIR /app

# Instalar dependencias base primero
RUN pip install --upgrade pip && \
    pip install fastapi==0.115.12 uvicorn==0.34.0 pydantic==2.10.6 pydantic-settings==2.8.1 python-multipart==0.0.20 httpx==0.28.1 \
    tiktoken==0.9.0 redis==5.2.1 python-dotenv==1.0.1 tenacity==9.0.0 \
    pytest==8.3.5 supabase==2.15.0

# Instalar LlamaIndex en versión monolítica
RUN pip install llama-index==0.12.26

# Copiar código de la aplicación
COPY query-service/ ./query-service/
COPY common/ ./common/
COPY .env.example ./.env.example

# Instalar curl para health checks
RUN apt-get update && apt-get install -y curl && apt-get clean

# Hacer que el script de inicialización sea ejecutable
RUN chmod +x /app/query-service/init_ollama.sh

# Variables mínimas de identificación del servicio
ENV PYTHONPATH=/app
ENV SERVICE_NAME=query-service

# Variables mínimas para modo de prueba (pueden ser sobreescritas por config.py o .env)
ENV CONFIG_ENVIRONMENT=development
ENV TENANT_ID=default
ENV LOAD_CONFIG_FROM_SUPABASE=false

# Variables de credenciales (estas deben ser sobreescritas en producción)
ENV SUPABASE_URL=https://example.supabase.co
ENV SUPABASE_KEY=dummy-key-for-testing
ENV OPENAI_API_KEY=sk-dummy-key-for-testing

# Puerto en el que se ejecutará el servicio (definido en config.py)
EXPOSE 8002

# Directorio de trabajo para el servicio
WORKDIR /app/query-service

# Health check para K8s
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 CMD curl -f http://localhost:8002/status || exit 1

# Comando para ejecutar el servicio
CMD ./init_ollama.sh && uvicorn query_service:app --host 0.0.0.0 --port 8002
